{"ast":null,"code":"import { createElementVNode as _createElementVNode, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container mt-5\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createStaticVNode(\"<h1 class=\\\"text-center mb-4\\\">Welcome to Wiggli Challenge</h1><div class=\\\"card\\\"><div class=\\\"card-body\\\"><h2 class=\\\"card-title\\\">Book Recommendation System</h2><h3 class=\\\"card-subtitle mb-3 text-muted\\\">Objective</h3><p class=\\\"card-text\\\"> Create a book recommendation system based on book descriptions. Use the OpenAI API for processing book descriptions and Langchain for managing the processing pipeline. Data will be managed and analyzed with Pandas. </p><h3 class=\\\"card-subtitle mb-3 text-muted\\\">Steps</h3><ol class=\\\"card-text\\\"><li>Collect Data: Use the Google Books API to retrieve book descriptions.</li><li>Prepare Data: Clean and store the data in a Pandas DataFrame.</li><li>Obtain Embeddings: Use the OpenAI API to obtain embeddings for the descriptions.</li><li>Create Processing Chain: Use Langchain to automate the processing flow.</li><li>Recommend Books: Implement a recommendation algorithm based on the similarity of embeddings.</li><li>Evaluate and Improve: Assess performance and suggest improvements.</li></ol><h3 class=\\\"card-subtitle mb-3 text-muted\\\">Deliverables</h3><ul class=\\\"card-text\\\"><li>Source Code: GitHub repository with the code.</li><li>Documentation: README with instructions and architecture.</li><li>Evaluation Report: Document explaining results and improvements.</li></ul></div></div>\", 2);\nconst _hoisted_4 = [_hoisted_2];\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [..._hoisted_4]);\n}","map":{"version":3,"names":["class","_createStaticVNode","_hoisted_2","_createElementBlock","_hoisted_1","_hoisted_4"],"sources":["/Users/mac/Documents/chalenge/frontend/src/components/HelloWorld.vue"],"sourcesContent":["<!-- Vue.js Component Template -->\n<template id=\"app-home\">\n  <div class=\"container mt-5\">\n      <h1 class=\"text-center mb-4\">Welcome to Wiggli Challenge</h1>\n      \n      <div class=\"card\">\n          <div class=\"card-body\">\n              <h2 class=\"card-title\">Book Recommendation System</h2>\n              <h3 class=\"card-subtitle mb-3 text-muted\">Objective</h3>\n              <p class=\"card-text\">\n                  Create a book recommendation system based on book descriptions. Use the OpenAI API for processing book descriptions and Langchain for managing the processing pipeline. Data will be managed and analyzed with Pandas.\n              </p>\n              <h3 class=\"card-subtitle mb-3 text-muted\">Steps</h3>\n              <ol class=\"card-text\">\n                  <li>Collect Data: Use the Google Books API to retrieve book descriptions.</li>\n                  <li>Prepare Data: Clean and store the data in a Pandas DataFrame.</li>\n                  <li>Obtain Embeddings: Use the OpenAI API to obtain embeddings for the descriptions.</li>\n                  <li>Create Processing Chain: Use Langchain to automate the processing flow.</li>\n                  <li>Recommend Books: Implement a recommendation algorithm based on the similarity of embeddings.</li>\n                  <li>Evaluate and Improve: Assess performance and suggest improvements.</li>\n              </ol>\n              <h3 class=\"card-subtitle mb-3 text-muted\">Deliverables</h3>\n              <ul class=\"card-text\">\n                  <li>Source Code: GitHub repository with the code.</li>\n                  <li>Documentation: README with instructions and architecture.</li>\n                  <li>Evaluation Report: Document explaining results and improvements.</li>\n              </ul>\n          </div>\n      </div>\n  </div>\n</template>"],"mappings":";;EAEOA,KAAK,EAAC;AAAgB;gCAF7BC,kBAAA;oBAGMC,UAA6D,C;;uBADjEC,mBAAA,CA2BM,OA3BNC,UA2BM,EA7BR,IAAAC,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}